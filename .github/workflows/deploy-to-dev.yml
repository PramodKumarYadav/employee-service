name: ðŸŸ¢ deploy-to-dev

on:
  push:
    branches: ["main"]  
  workflow_dispatch:

run-name: deploy ${{ github.event.repository.name }} to dev

jobs:
  deploy_service-to-dev:
    name: deploy employee-service to dev
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Dummy steps just to demonstrate the concept
      - name: setup infra
        run: echo "Setting infrastructure" 
      
      - name: build application
        run: echo "Building application"
      
      - name: deploy application
        run: echo "App deployed" 
  
  notify:
    runs-on: ubuntu-latest
    name: trigger e2e tests.
    needs: deploy_service-to-dev
    strategy:
      matrix:
        repos: [ 'PramodKumarYadav/playwright-sandbox' ]
    steps:
      - name: Dispatch event to repository
        uses: peter-evans/repository-dispatch@v3.0.0
        with:
          token: ${{ secrets.PAT_LATEST }}
          repository: ${{ matrix.repos }}
          event-type: ${{ github.event.repository.name }}-dev-deployed
          client-payload: '{ "github": ${{ toJson(github) }},"TEST_ENV": "dev" ,  "TAG_OF_TESTS_TO_RUN": "${{ github.event.repository.name }}", "TAG": "docker-image-tag-from-another-workflow"}'

  watch-test-status:
    needs: notify
    runs-on: ubuntu-latest
    steps:
      - name: Watch Test Results on GitHub and BrowserStack
        run: |
          echo "GitHub run status: https://github.com/PramodKumarYadav/playwright-sandbox/actions/workflows/trigger-targetted-tests-on-every-new-env-deployment.yml"
          echo "BrowserStack Test Run Status: https://observability.browserstack.com/projects/playwright-sandbox/builds?search=${{ github.event.repository.name }}"